/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.Admin;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vidyavathipuli
 */
public class AdminsManagementJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem System;
    ArrayList<String> arrayListUser = new ArrayList<String>();

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public AdminsManagementJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.System = system;
        btnSave.setEnabled(false);
        populateTable();
        populateNetworkComboBox();
    }
   
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tableAdminDetails.getModel();

        model.setRowCount(0);
        for (Network network : System.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getOrganizationName();
                    row[1] = network.getNetworkName();
                    row[2] = userAccount;
                    arrayListUser.add(userAccount.toString());

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        comboNetwork.removeAllItems();
        
        for (Network network : System.getNetworkList()){
            comboNetwork.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        comboEnterprise.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            comboEnterprise.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAdminDetails = new javax.swing.JTable();
        jlNetwork = new javax.swing.JLabel();
        comboNetwork = new javax.swing.JComboBox();
        jlUsername = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jlEnterprise = new javax.swing.JLabel();
        comboEnterprise = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        jlPassword = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jlName = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnBack = new javax.swing.JButton();
        jlCrateEnterpriseAdmin = new javax.swing.JLabel();
        jlAdminDetails = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        tableAdminDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableAdminDetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableAdminDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAdminDetails);

        jlNetwork.setBackground(new java.awt.Color(153, 153, 153));
        jlNetwork.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jlNetwork.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlNetwork.setText("Network:");

        comboNetwork.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNetworkActionPerformed(evt);
            }
        });

        jlUsername.setBackground(new java.awt.Color(153, 153, 153));
        jlUsername.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jlUsername.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlUsername.setText("Username*:");

        txtUserName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jlEnterprise.setBackground(new java.awt.Color(153, 153, 153));
        jlEnterprise.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jlEnterprise.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlEnterprise.setText("Enterprise:");

        comboEnterprise.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAdd.setBackground(new java.awt.Color(204, 204, 204));
        btnAdd.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jlPassword.setBackground(new java.awt.Color(153, 153, 153));
        jlPassword.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jlPassword.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlPassword.setText("Password*:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jlName.setBackground(new java.awt.Color(153, 153, 153));
        jlName.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jlName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlName.setText("Name*:");

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jlCrateEnterpriseAdmin.setBackground(new java.awt.Color(255, 255, 255));
        jlCrateEnterpriseAdmin.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jlCrateEnterpriseAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCrateEnterpriseAdmin.setText("CREATE ENTERPRISE ADMIN");

        jlAdminDetails.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlAdminDetails.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlAdminDetails.setText("Admin details");

        btnUpdate.setBackground(new java.awt.Color(204, 204, 204));
        btnUpdate.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(204, 204, 204));
        btnSave.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete1.setText("Delete ");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jlCrateEnterpriseAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlAdminDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jlPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlEnterprise, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtPassword)
                                    .addComponent(txtUserName)
                                    .addComponent(comboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete1)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCrateEnterpriseAdmin)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(jlAdminDetails)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNetwork)
                            .addComponent(comboNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEnterprise)
                            .addComponent(comboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlUsername)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete1)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(346, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNetworkActionPerformed

        Network network = (Network) comboNetwork.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_comboNetworkActionPerformed

    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        boolean nameMatch=true,userNameMatch=true,passMatch=true;
        Enterprise enterprise = (Enterprise) comboEnterprise.getSelectedItem();
        String username = txtUserName.getText();
        String password = String.valueOf(txtPassword.getPassword());
        String name = txtName.getText();
        if (name.matches("^([A-Za-z]+)(\\s[A-Za-z]+)*\\s?$")) {
            name = name.trim();
        } else {
            JOptionPane.showMessageDialog(null, "Enter Valid Name");
            nameMatch=false;
            return;
        }
        boolean flag ;
        flag = username.matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        if(!flag) {
            JOptionPane.showMessageDialog(null, "UserName must be in format of A@B.C");
            userNameMatch=false;
            return;}
         else {
              for(String s:arrayListUser){
               if(s.equalsIgnoreCase(username)){
                 JOptionPane.showMessageDialog(null, "Username exists please take another username");
                 userNameMatch=false;
                 return;
                }
            }
            
        }
        flag =password.matches("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$");
        if (!flag) {
            JOptionPane.showMessageDialog(null, "Password should contain at least  a Character, One Captial,Small letter with minimum 8 characters length");
           passMatch = false;  
           return;}
        
         
        if(nameMatch && userNameMatch && passMatch){
        Employee employee = enterprise.getEmployeeDirectory().AddEmployee(System.getEmployeeId(),name);
        System.incEmployeeId();
        UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new Admin());
        arrayListUser.add(username);
        populateTable();
        JOptionPane.showMessageDialog(null, "Enterprise admin added successfully");
        }
        
        txtUserName.setText("");
        txtPassword.setText("");
        txtName.setText("");
        
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminworkAreaJPanel = (SystemAdminWorkAreaJPanel) component;
        sysAdminworkAreaJPanel.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdminDetails.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select an enterprise admin to update");
            return;
        }
        UserAccount user = (UserAccount) tableAdminDetails.getValueAt(selectedRow, 2);
        txtUserName.setText(user.getUsername());
        txtPassword.setText(user.getPassword());
        txtName.setText(user.getEmployee().getName());
        btnSave.setEnabled(true);
        

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAdminDetails.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select an enterprise admin to update");
            return;
        }
        UserAccount user = (UserAccount) tableAdminDetails.getValueAt(selectedRow, 2);
        user.setUsername(txtUserName.getText());
        user.setPassword(txtPassword.getText());
        user.getEmployee().setName(txtName.getText());
        JOptionPane.showMessageDialog(null, "Details Updated Successfully");
        populateTable();
        txtUserName.setText("");
        txtPassword.setText("");
        txtName.setText("");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
//        //TODO add your handling code here:
//        int selectedRowIndex = tableAdminDetails.getSelectedRow();
//        if (selectedRowIndex <0){
//            JOptionPane.showMessageDialog(this, "Please Select a row to delete");
//            return;
//        }
//        DefaultTableModel model = (DefaultTableModel) tableAdminDetails.getModel();
//        Enterprise enterprise = (Enterprise) comboEnterprise.getSelectedItem();
//        UserAccount sel  = (UserAccount)model.getValueAt(selectedRowIndex, 2);
//        
//        enterprise.getEmployeeDirectory().DeleteEmployee(sel.getEmployee());
//        //system.DeleteNetwork(sel);
//          System.decEmployeeId();
//          arrayListUser.remove(sel.getUsername());
//        JOptionPane.showMessageDialog(this, "Network Details Deleted");
//        populateTable();
         
    }//GEN-LAST:event_btnDelete1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox comboEnterprise;
    private javax.swing.JComboBox comboNetwork;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlAdminDetails;
    private javax.swing.JLabel jlCrateEnterpriseAdmin;
    private javax.swing.JLabel jlEnterprise;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNetwork;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlUsername;
    private javax.swing.JTable tableAdminDetails;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
