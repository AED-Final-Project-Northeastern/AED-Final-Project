/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdministrativeRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Person.Patient;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Business.EcoSystem;
import java.util.ArrayList;

/**
 *
 * @author vidyavathipuli
 */
public class PatientManagement extends javax.swing.JPanel {

    JPanel processContainerUser;
    OrganizationDirectory directoryOrganiser; 
    Enterprise Enterprise;
    EcoSystem ecosystem;
    /**
     * Creates new form PatientManagement
     */
    public PatientManagement(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, Enterprise enterprise,EcoSystem ecoSystem) {
        this.processContainerUser=userProcessContainer;
        this.directoryOrganiser=organizationDirectory;
        this.Enterprise=enterprise;
        this.ecosystem=ecoSystem;
        
        initComponents();
        initcb_dept();
        txtPatientId.setText(""+this.ecosystem.getPatientId());      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jlPatientDetails = new javax.swing.JLabel();
        jlPatientId = new javax.swing.JLabel();
        jlName = new javax.swing.JLabel();
        jlAge = new javax.swing.JLabel();
        jlSpeciality = new javax.swing.JLabel();
        jlDoctor = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtSpeciality = new javax.swing.JComboBox<>();
        txtDoctor = new javax.swing.JComboBox<>();
        jlContact = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        buttonSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jlSex = new javax.swing.JLabel();
        comboSex = new javax.swing.JComboBox<>();
        patCount = new javax.swing.JLabel();

        jTextField4.setText("jTextField4");

        setBackground(new java.awt.Color(0, 204, 204));
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        jlPatientDetails.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jlPatientDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPatientDetails.setText("Patient Details");

        jlPatientId.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlPatientId.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlPatientId.setText("Patient ID :");

        jlName.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlName.setText("Name :");

        jlAge.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlAge.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlAge.setText("Age :");

        jlSpeciality.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlSpeciality.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlSpeciality.setText("Speciality :");

        jlDoctor.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlDoctor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlDoctor.setText("Doctor :");

        txtPatientId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtAge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtSpeciality.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpecialityActionPerformed(evt);
            }
        });

        txtDoctor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorActionPerformed(evt);
            }
        });

        jlContact.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlContact.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlContact.setText("Contact:");

        txtContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        buttonSubmit.setBackground(new java.awt.Color(204, 204, 204));
        buttonSubmit.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buttonSubmit.setText("Submit");
        buttonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubmitActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 0, 51));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jlSex.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jlSex.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlSex.setText("Sex :");

        comboSex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Male", "Female", "Others" }));

        patCount.setBackground(new java.awt.Color(255, 51, 0));
        patCount.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        patCount.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(19, 19, 19)
                                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlSpeciality, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24)
                                .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlSex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(20, 20, 20)
                                .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(20, 20, 20)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlPatientId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22)
                                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlPatientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlContact, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(585, 585, 585)
                        .addComponent(buttonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(patCount, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(202, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(patCount))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlPatientDetails)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlPatientId))
                            .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jlName))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlAge))
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlSex))
                            .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlContact)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlSpeciality))
                            .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jlDoctor))
                            .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(buttonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(342, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void initcb_dept(){
        txtSpeciality.addItem("--Select--");
        for(Organization org: directoryOrganiser.getOrganizationList()){
            if(org.getType().getValue().equalsIgnoreCase("medical")){
                txtSpeciality.addItem(org.getOrganizationName());
            }
        }
    }
    
    public void countPatients(String doc){
        int counter=0;
        for(Organization org: directoryOrganiser.getOrganizationList()){
            if(org.getType().getValue().equalsIgnoreCase("medical")){
                for(Patient p: org.getPatientDirectory().getPatientList()){
                    if(p.isAlive()&&p.getDoctor().equalsIgnoreCase(doc)){
                        counter++;
                    }
                }
            }
        }
        patCount.setText(""+counter+" Patients are in line");
    
    }
    
    
    
    private void buttonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubmitActionPerformed
        // TODO add your handling code here:
        if(txtName.getText().isEmpty() || txtAge.getText().isEmpty() || txtContact.getText().isEmpty() ||
               txtSpeciality.getSelectedIndex()==0||txtDoctor.getSelectedIndex()==0) {
            JOptionPane.showMessageDialog(null, "Please provide details in all fields");
            return;
        }
        //firstname and last name===========================
        boolean check ; 
        check = txtName.getText().matches("^[a-zA-Z]+$");
        
        if(check == false) {
            JOptionPane.showMessageDialog(null, "First name cannot have numerics");
            return;
        }

        //Phone Number==================================================
        
        if(txtContact.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits");
            return;
        }
        check = txtContact.getText().matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only");
            return;
        }
        //Age========================================
        check=txtAge.getText().matches("^[1-9][0-9]?$");
        if(!check){
            JOptionPane.showMessageDialog(null, "Please enter a proper age value");
            return;
        }
        check=comboSex.getSelectedIndex()>0;
        if(!check){
            JOptionPane.showMessageDialog(null, "Please select a gender");
            return;
        }

        
        
        ArrayList<String> organs=new ArrayList<>();
        ArrayList<String> testData=new ArrayList<>();
        for(int i=0;i<directoryOrganiser.getOrganizationList().size();i++){
            if(directoryOrganiser.getOrganizationList().get(i).getOrganizationName().equalsIgnoreCase(txtSpeciality.getSelectedItem().toString())){
                Organization organization=directoryOrganiser.getOrganizationList().get(i);
                organization.getPatientDirectory().createPatient(ecosystem.getPatientId(),txtName.getText(),txtAge.getText(),comboSex.getSelectedItem().toString(),txtContact.getText(),txtSpeciality.getSelectedItem().toString(),txtDoctor.getSelectedItem().toString(),true,true,true,organs,testData);
                ecosystem.incPatientId();
                break;
            }
        }
        JOptionPane.showMessageDialog(null, "Your appointment is confirmed!");
        processContainerUser.remove(this);
        CardLayout layout = (CardLayout) processContainerUser.getLayout();
        layout.previous(processContainerUser);
        
    }//GEN-LAST:event_buttonSubmitActionPerformed

    private void txtDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorActionPerformed
        // TODO add your handling code here:
        if(txtDoctor.getSelectedIndex()>0){
            String doc=txtDoctor.getSelectedItem().toString();
            countPatients(doc);
        }
        
        
    }//GEN-LAST:event_txtDoctorActionPerformed

    private void txtSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpecialityActionPerformed
        // TODO add your handling code here:
        txtDoctor.removeAllItems();
        txtDoctor.addItem("--Select--");
        int counter=0;
        for(int i=0;i<directoryOrganiser.getOrganizationList().size();i++){
            Organization org=directoryOrganiser.getOrganizationList().get(i);
            //JOptionPane.showMessageDialog(null, cb_dept.getSelectedItem().toString().equalsIgnoreCase(org.getName()));
            if(txtSpeciality.getSelectedItem().toString().equalsIgnoreCase(org.getOrganizationName())){
                for(int j=0;j<org.getUserAccountDirectory().getUserAccountList().size();j++){
                    Employee emp=org.getUserAccountDirectory().getUserAccountList().get(j).getEmployee();
                    txtDoctor.addItem(emp.getName());
                    counter++;
                }
            }
        }
        if(counter==0){
            txtDoctor.removeAllItems();
            txtDoctor.addItem("No Doctors");
        }
    }//GEN-LAST:event_txtSpecialityActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        processContainerUser.remove(this);
        CardLayout layout = (CardLayout) processContainerUser.getLayout();
        layout.previous(processContainerUser);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JComboBox<String> comboSex;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel jlAge;
    private javax.swing.JLabel jlContact;
    private javax.swing.JLabel jlDoctor;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPatientDetails;
    private javax.swing.JLabel jlPatientId;
    private javax.swing.JLabel jlSex;
    private javax.swing.JLabel jlSpeciality;
    private javax.swing.JLabel patCount;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContact;
    private javax.swing.JComboBox<String> txtDoctor;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JComboBox<String> txtSpeciality;
    // End of variables declaration//GEN-END:variables
}
